{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red28\green0\blue207;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
1. 
\f1 \'d4\'f5\'c3\'b4\'c8\'a5\'b3\'fd\'d6\'d8\'b8\'b4\'b5\'c4\'ca\'fd\'be\'dd\'d4\'da\'d2\'bb\'b8\'f6\'c3\'bb\'d3\'d0\'c5\'c5\'d0\'f2\'b5\'c4linked list\
	\'d3\'d0\'c1\'bd\'b8\'f6\'cb\'bc\'c2\'b7\'a3\'ba\'d2\'bb\'b8\'f6\'ca\'c7runner\'a3\'ac\'be\'cd\'ca\'c7\'bc\'b8\'b8\'f6\'d6\'b8\'d5\'eb\'c0\'b4\'bb\'d8\'c5\'dc\'a3\'ac\'b1\'c8\'bd\'cf\'a1\'a3 \'ca\'b1\'bc\'e4\'c9\'cf\'c2\'fdO\'a3\'a8N^2\'a3\'a9\'a1\'a3\'d2\'bb\'b8\'f6current\'d6\'b8\'d5\'eb\'a3\'ac\'d2\'bb\'b8\'f6runner\'d6\'b8\'d5\'eb\'a1\'a3\'bf\'aa\'ca\'bc\'b6\'bc\'d6\'b8\'cf\'f2head\'a1\'a3\
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\f2\fs22 \cf2 \CocoaLigature0 while\cf0  (current != \cf2 NULL\cf0 )\
	\{\
		node * runner = current;\
		\cf2 while\cf0  (runner->next != \cf2 NULL\cf0 )\
		\{\
			\cf2 if\cf0  (runner->next->data == current->data)\
			\{\
				runner->next = runner->next->next;\
			\}\
			\cf2 else\cf0 \
			\{\
				runner = runner->next;\
			\}\
		\}\
		current = current->next;\
	\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs24 \cf0 \CocoaLigature1 	\'d2\'f2\'ce\'aa\'d5\'e2\'b8\'f6\'cc\'ab\'c2\'fd\'a3\'ac\'cb\'f9\'d2\'d4\'c0\'cf\'b9\'e6\'b8\'f1\'a3\'ac\'bf\'b4\'bf\'b4hash\'d4\'f5\'c3\'b4\'d1\'f9\'a1\'a3hash\'b4\'f3\'b7\'a8\'ba\'c3\'b0\'a1\'a1\'a3\
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\f2\fs22 \cf2 \CocoaLigature0 	while\cf0 (runner)\
	\{\
		\cf2 if\cf0 (table[runner->data])\
		\{\
			current->next = runner->next;\
			runner = runner->next;\
		\}\
		\cf2 else\cf0 \
		\{\
			table[runner->data] = \cf2 true\cf0 ;\
			current = runner;\
			runner = runner->next;\
		\}\
	\}\
2 
\f1\fs24 \CocoaLigature1 \'d5\'d2
\f2\fs22 \CocoaLigature0 linked list
\f1 \'c0\'ef\'c3\'e6\'d7\'ee\'ba\'f3\'b5\'c4kth\'d4\'aa\'cb\'d8\'a1\'a3 \'d2\'b2\'ca\'c7\'d3\'d0\'c1\'bd\'d6\'d6\'b7\'bd\'b7\'a8\'a3\'ac\'b5\'dd\'b9\'e9\'ba\'cd\'b1\'e9\'c0\'fa\
\'b1\'e9\'c0\'fa\'b7\'a8\'d7\'ee\'d6\'b1\'bd\'d3\'a3\'ac\'c1\'bd\'b8\'f6\'d6\'b8\'d5\'eb\'a3\'ac\'bf\'aa\'ca\'bc\'b6\'bc\'d6\'b8\'cf\'f2\'cd\'b7\'a3\'ac\'c8\'bb\'ba\'f3\'b5\'da\'b6\'fe\'b8\'f6\'d6\'b8\'d5\'eb\'d2\'c6\'b6\'afkstep\'a1\'a3\'cd\'a3\
\'c8\'bb\'ba\'f3\'c1\'bd\'b8\'f6\'d6\'b8\'d5\'eb\'b6\'bc\'bf\'aa\'ca\'bc\'d2\'c6\'b6\'af\'a3\'ac\'d6\'b1\'b5\'bd\'b5\'da\'b6\'fe\'d6\'b8\'d5\'eb\'d6\'b8\'cf\'f2null\'a3\'ac\'cd\'a3\'a1\'a3\'ca\'e4\'b3\'f6\'b5\'da\'d2\'bb\'b8\'f6\'d6\'b8\'d5\'eb\'a1\'a3\
\
\'b5\'dd\'b9\'e9\'be\'cd\'ca\'c7 \
	
\f2 \cf2 int\cf0  i = findNthelements(head->next, n) + \cf3 1\cf0 ;\
	\cf2 if\cf0  (i == n)\
	\{\
		print(head);	\
	\}
\f1\fs24 \CocoaLigature1 	\
3 \'d5\'e2\'b8\'f6\'cc\'e2\'c3\'bb\'ca\'b2\'c3\'b4\'b0\'c9\'a3\'ac\'be\'cd\'ca\'c7\'c9\'be\'b3\'fd\'d2\'bb\'b8\'f6node\'a1\'a3\'b0\'d1\'d2\'aa\'c9\'be\'b3\'fdnode\'ca\'fd\'be\'dd\'b1\'e4\'b3\'c9\'cb\'fb\'b5\'c4next\'ca\'fd\'be\'dd\'a1\'a3\'c8\'bb\'ba\'f3\'d6\'b8\'cf\'f2\'cb\'fb\'b5\'c4next\'b5\'c4next\'a1\'a3\
4 \'d2\'bb\'b8\'f6partition\'b5\'c4\'ce\'ca\'cc\'e2\'a1\'a3\'b1\'c8\'d6\'c6\'b6\'a8\'d6\'b5\'b4\'f3\'b5\'c4\'d4\'da\'c7\'b0\'a3\'ac\'b1\'c8\'d6\'c6\'b6\'a8\'d6\'b5\'d0\'a1\'b5\'c4\'d4\'da\'ba\'f3\'c3\'e6\'a3\'ac\'b1\'c8\'c8\'e70\'a3\'ac1\'a3\'ac2\'a3\'ac3\'a3\'ac4. \'d1\'a1\'d4\'f13\'ba\'f3\'a3\'ac\'ca\'e4\'b3\'f6\'ce\'aa4\'a3\'ac0\'a3\'ac1\'a3\'ac2\'a3\'ac3.\
\'d0\'e8\'d2\'aa\'d3\'c3\'c1\'bd\'b8\'f6\'d6\'b8\'d5\'eb\'a1\'a3\'d2\'bb\'b8\'f6\'d6\'b8\'cf\'f2\'cd\'b7\'a3\'ac\'d2\'bb\'b8\'f6\'d3\'c3\'d2\'d4\'d6\'b8\'cf\'f2\'ce\'b2\'a1\'a3\'c8\'e7\'b9\'fb\'ca\'fd\'d6\'b5\'d0\'a1\'d3\'da\'a3\'ac\'ce\'b2\'be\'cd\'d2\'bb\'d6\'b1\'cf\'f2\'ba\'f3\'a3\'ac\'c8\'e7\'b9\'fb\'b4\'f3\'d3\'da\'a3\'ac\'be\'cd\'b0\'d1\'cd\'b7\'d6\'b8\'cf\'f2\'d5\'e2\'b8\'f6\'b4\'f3\'d3\'da\'b5\'c4\'ca\'fd\'d6\'b5\'a1\'a3\'c5\'d0\'b6\'cf\'ce\'aa\'bf\'d5\'cd\'cb\'b3\'f6\'a1\'a3\'b2\'a2\'c7\'d2\'b0\'d1\'ce\'b2\'d6\'b8\'cf\'f2\'b5\'c4\'cf\'c2\'d2\'bb\'b8\'f6node\'c9\'e8\'d6\'c3\'ce\'aa\'bf\'d5\'a3\'ac\'b1\'dc\'c3\'e2\'d1\'ad\'bb\'b7\'a1\'a3\
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\f2\fs22 \cf0 \CocoaLigature0 \
node *partition(node *n, \cf2 int\cf0  k)\
\{\
	node *head = n;\
	node *tail = n;\
	\cf2 while\cf0  (n != \cf2 NULL\cf0 )\
	\{\
		node *temp = n->next;\
		\cf2 if\cf0  (n->data > k)\
		\{\
			n->next = head;\
			head = n;\
		\}\
		\cf2 else\cf0 \
		\{\
			tail = n;\
		\}\
		n = temp;\
	\}\
	tail->next = \cf2 NULL\cf0 ;\
	print(head);\
	\cf2 return\cf0  head;\
\}\
\
5 
\f1 \'be\'ad\'b5\'e4\'cc\'e2\'a3\'ac\'cf\'e0\'bc\'d3\'c1\'bd\'b8\'f6
\f2 linkedlist
\f1 \'a1\'a3\'b5\'ab\'ca\'c7\'cc\'e2\'c9\'e8\'d2\'aa\'c7\'f3\'b7\'b4\'d7\'aa\'cf\'e0\'bc\'d3\'a3\'ac
\f2 anyway
\f1 \'a3\'ac\'d5\'e2\'b6\'bc\'b2\'bb\'c4\'d1\'a1\'a3\'ce\'d2\'b4\'b4\'bd\'a8\'c1\'cb\'c1\'bd\'b8\'f6class node\'ba\'cdlist\'a1\'a3\
	\'ca\'d7\'cf\'c8\'d2\'aa\'b7\'b4\'d7\'aa\'a3\'ac\'d0\'e8\'d2\'aa\'c8\'fd\'b8\'f6\'d6\'b8\'d5\'eb\'a3\'ac\'c7\'b0\'d6\'b8\'d5\'eb\'a3\'ac\'cf\'d6\'d4\'da\'b5\'c4\'d6\'b8\'d5\'eb\'a3\'ac\'cf\'c2\'d2\'bb\'b8\'f6\'d6\'b8\'d5\'eb\
	while\'a3\'a8current\'a3\'a1=NULL\'a3\'a9\
		head = current;\
		next = current->next;\
		current->next = previous\
		previous = current\
		current = next\
	\'d2\'f2\'ce\'aalist\'b5\'c4\'b3\'a4\'b6\'c8\'b2\'bb\'cd\'ac\'a3\'ac\'cb\'f9\'d2\'d4\'ce\'d2\'c3\'c7\'d0\'e8\'d2\'aa\'b0\'d1\'cb\'fb\'b5\'c4\'ce\'bb\'b2\'b9\'c6\'eb\'a1\'a3\'b1\'c8\'c8\'e71\'a3\'ac2\'a3\'ac4 + 3\'a3\'ac9\'a1\'a3 3\'a3\'ac9 \'c9\'d9\'d2\'bb\'ce\'bb\'a3\'ac\'d0\'e8\'d2\'aa\'d7\'ee\'b8\'df\'ce\'bb\'b2\'b9\'d2\'bb\'b8\'f60\'a1\'a3 list\'bf\'aa\'ca\'bc\'cf\'e0\'bc\'d3\'a3\'ac\'cf\'c8\'bf\'b4\'c1\'bd\'b8\'f6list\'b5\'c4size\'b2\'ee\'b6\'e0\'c9\'d9\'a3\'ac\'d5\'e2\'d1\'f9\'ba\'c3\'be\'f6\'b6\'a8\'d0\'e8\'d2\'aa\'b2\'b9\'b6\'e0\'c9\'d9\'b8\'f60. \'b2\'b9\'c6\'eb0\'d2\'d4\'ba\'f3\'bf\'aa\'ca\'bc\'bc\'d3\'a1\'a3\
	\'bc\'d3\'d0\'e8\'d2\'aa\'d3\'c3\'b5\'bd\'c1\'cb\'b5\'dd\'b9\'e9\'a1\'a3\'d2\'bb\'d6\'b1\'b5\'dd\'b9\'e9\'b5\'bd\'d7\'ee\'b5\'cd\'ce\'bb\'a1\'a3n->next\'a1\'a3 val = carry + n1.data + n2.data; \
	node_val = val%10, carry_next = val/10;  \'d7\'ee\'ba\'f3\'bd\'e1\'ca\'f8\'ba\'f3\'b2\'bb\'d2\'aa\'cd\'fc\'bc\'c7\'bc\'ec\'b2\'e9\'b1\'df\'bd\'e7\'cc\'f5\'bc\'fe\'a3\'ac\'d4\'da\'bf\'b4\'d2\'bb\'cf\'c2\'d3\'d0\'c3\'bb\'d3\'d0carry\
\
6 \'be\'ad\'b5\'e4\'cc\'e2\'a3\'ac\'d4\'f5\'c3\'b4\'c5\'d0\'b6\'cf\'d2\'bb\'b8\'f6list\'ca\'c7\'d3\'d0\'d1\'ad\'bb\'b7\'b5\'c4\'a1\'a3\'d0\'e8\'d2\'aa\'bf\'ec\'c2\'fd\'c1\'bd\'b8\'f6\'d6\'b8\'d5\'eb\'a1\'a3\'bf\'ec\'d6\'b8\'d5\'eb\'d7\'df\'c1\'bd\'b2\'bd\'a3\'ac\'c2\'fd\'d6\'b8\'d5\'eb\'d7\'df\'d2\'bb\'b2\'bd\'a1\'a3\'b5\'b1\'cb\'fb\'c3\'c7\'cf\'e0\'d3\'f6\'b5\'c4\'b5\'d8\'b7\'bd\'be\'cd\'ca\'c7\'cb\'b5\'c3\'f7\'ca\'c7\'d3\'d0\'d1\'ad\'bb\'b7\'b5\'c4\'a1\'a3\'d4\'f5\'c3\'b4\'c5\'d0\'b6\'cf\'d1\'ad\'bb\'b7\'b5\'c4\'c6\'f0\'b5\'e3\'c4\'d8\'a1\'a3\'d2\'bb\'b4\'f3\'cd\'c6\'ca\'fd\'d1\'a7\'cd\'c6\'b5\'bc\'b3\'f6\'c0\'b4\'b5\'c4\'a1\'a3\'be\'cd\'b2\'bb\'d4\'da\'d5\'e2\'cb\'b5\'c1\'cb\'a1\'a3 \'c2\'fd\'d6\'b8\'d5\'eb\'cd\'cb\'bb\'d8\'b5\'bdlist\'c6\'f0\'b5\'e3\'a1\'a3\'bf\'ec\'d6\'b8\'d5\'eb\'bb\'b9\'d4\'da\'d4\'ad\'b5\'d8\'a1\'a3\'c8\'bb\'ba\'f3\'c3\'bf\'b8\'f6\'c8\'cb\'b6\'bc\'d2\'c6\'b6\'af\'d2\'bb\'b2\'bd\'a1\'a3\'d4\'d9\'b4\'ce\'cf\'e0\'d3\'f6\'b5\'c4\'b5\'d8\'b7\'bd\'be\'cd\'ca\'c7\'d1\'ad\'bb\'b7\'b5\'c4\'c6\'f0\'b5\'e3\'a1\'a3\
\
7 \'be\'ad\'b5\'e4\'cc\'e2\'a3\'ac\'d4\'f5\'c3\'b4\'c5\'d0\'b6\'cflist\'ca\'c7\'d2\'bb\'b8\'f6\'bb\'d8\'ce\'c4\'a1\'a3\'be\'cd\'ca\'c71223334 \'ba\'cd 4333221. \'ba\'dc\'bc\'f2\'b5\'a5\'a3\'ac\'cf\'c8reverse\'b5\'da\'b6\'fe\'b8\'f6\'a1\'a3\'c8\'bb\'ba\'f3\'d2\'bb\'b8\'f6\'b8\'f6\'b1\'c8\'bd\'cf\'a1\'a3}